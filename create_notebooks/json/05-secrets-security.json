{
  "title": "Exercise 05: Secrets and Security in GitHub Actions",
  "description": "In this notebook, we'll explore how to securely handle sensitive information in GitHub Actions using secrets and security best practices.",
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Exercise 05: Secrets and Security in GitHub Actions\n",
        "\n",
        "In this notebook, we'll explore how to securely handle sensitive information in GitHub Actions using secrets and security best practices."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Prerequisites\n",
        "\n",
        "Before starting this exercise, ensure you have:\n",
        "\n",
        "1. **AWS Account Setup**\n",
        "   - An AWS account with appropriate permissions\n",
        "   - An S3 bucket for deployment\n",
        "   - An IAM role with necessary permissions\n",
        "   - AWS credentials configured\n",
        "\n",
        "2. **GitHub Repository**\n",
        "   - A repository with GitHub Actions enabled\n",
        "   - Appropriate permissions to manage secrets\n",
        "   - Access to create environments"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Understanding GitHub Secrets\n",
        "\n",
        "GitHub Secrets are encrypted environment variables that you can use to store sensitive information like:\n",
        "\n",
        "- API keys\n",
        "- Passwords\n",
        "- Tokens\n",
        "- Certificates\n",
        "\n",
        "There are three types of secrets in GitHub:\n",
        "\n",
        "1. Repository secrets\n",
        "2. Organization secrets\n",
        "3. Environment secrets"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Basic Secrets Usage\n",
        "\n",
        "Here's how to use secrets in a workflow:\n",
        "\n",
        "```yaml\n",
        "name: Basic Secrets Example\n",
        "\n",
        "on: [push]\n",
        "\n",
        "jobs:\n",
        "  secure-deploy:\n",
        "    runs-on: ubuntu-latest\n",
        "    steps:\n",
        "      - uses: actions/checkout@v4\n",
        "      \n",
        "      - name: Use repository secret\n",
        "        run: |\n",
        "          # Never print secrets directly!\n",
        "          echo \"Using API key: ${{ secrets.API_KEY }}\"\n",
        "      \n",
        "      - name: Use environment secret\n",
        "        env:\n",
        "          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}\n",
        "        run: |\n",
        "          # Use the secret securely\n",
        "          ./deploy.sh\n",
        "```"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Advanced Security Features\n",
        "\n",
        "GitHub Actions provides several advanced security features:\n",
        "\n",
        "1. **Environment Protection Rules**\n",
        "   - Required reviewers\n",
        "   - Wait timer\n",
        "   - Branch restrictions\n",
        "\n",
        "2. **OIDC Integration**\n",
        "   - Cloud provider authentication\n",
        "   - Short-lived credentials\n",
        "   - No stored secrets\n",
        "\n",
        "3. **Permission Settings**\n",
        "   - Workflow permissions\n",
        "   - Token permissions\n",
        "   - Environment access\n",
        "\n",
        "Example of advanced security configuration:\n",
        "\n",
        "```yaml\n",
        "name: Advanced Security Example\n",
        "\n",
        "on: [push]\n",
        "\n",
        "# Define workflow-level permissions\n",
        "permissions:\n",
        "  contents: read\n",
        "  packages: write\n",
        "  \n",
        "jobs:\n",
        "  secure-workflow:\n",
        "    runs-on: ubuntu-latest\n",
        "    environment:\n",
        "      name: production\n",
        "      url: https://prod.example.com\n",
        "    \n",
        "    steps:\n",
        "      - uses: actions/checkout@v4\n",
        "      \n",
        "      - name: Configure AWS Credentials\n",
        "        uses: aws-actions/configure-aws-credentials@v4\n",
        "        with:\n",
        "          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}\n",
        "          aws-region: us-east-1\n",
        "```"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Secret Rotation and Management\n",
        "\n",
        "Best practices for managing secrets:\n",
        "\n",
        "1. **Regular Rotation**\n",
        "   - Automate secret rotation\n",
        "   - Use cloud provider features\n",
        "   - Implement rotation workflows\n",
        "\n",
        "2. **Access Control**\n",
        "   - Limit secret access\n",
        "   - Use environment protection\n",
        "   - Audit secret usage\n",
        "\n",
        "Example of a secret rotation workflow:\n",
        "\n",
        "```yaml\n",
        "name: Secret Rotation\n",
        "\n",
        "on:\n",
        "  schedule:\n",
        "    - cron: '0 0 1 * *'  # Monthly rotation\n",
        "\n",
        "jobs:\n",
        "  rotate-secrets:\n",
        "    runs-on: ubuntu-latest\n",
        "    environment: production\n",
        "    \n",
        "    steps:\n",
        "      - name: Generate new secret\n",
        "        id: generate\n",
        "        run: |\n",
        "          NEW_KEY=$(openssl rand -hex 32)\n",
        "          echo \"new_key=$NEW_KEY\" >> $GITHUB_OUTPUT\n",
        "      \n",
        "      - name: Update secret\n",
        "        uses: getsecret/update-secret@v1\n",
        "        with:\n",
        "          name: 'API_KEY'\n",
        "          value: ${{ steps.generate.outputs.new_key }}\n",
        "```"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Security Best Practices\n",
        "\n",
        "When working with secrets in GitHub Actions:\n",
        "\n",
        "1. **Never log secrets**: Avoid printing or logging secret values\n",
        "2. **Use minimal permissions**: Set least privilege access\n",
        "3. **Rotate secrets regularly**: Implement secret rotation\n",
        "4. **Use environment protection**: Add required reviewers\n",
        "5. **Audit secret usage**: Monitor who accesses secrets\n",
        "6. **Use OIDC when possible**: For cloud provider authentication\n",
        "7. **Validate secret values**: Check format and validity\n",
        "8. **Use secret scanning**: Enable GitHub's secret scanning"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Hands-on Exercise\n",
        "\n",
        "Let's practice what we've learned! Follow these steps:\n",
        "\n",
        "1. **Set Up AWS Resources**\n",
        "   - Create an S3 bucket for deployment\n",
        "   - Set up an IAM role with appropriate permissions\n",
        "   - Configure AWS credentials in GitHub Secrets\n",
        "\n",
        "2. **Configure GitHub Secrets**\n",
        "   - Go to your repository's Settings > Secrets and variables > Actions\n",
        "   - Add AWS-related secrets:\n",
        "     - `AWS_ACCESS_KEY_ID`\n",
        "     - `AWS_SECRET_ACCESS_KEY`\n",
        "     - `AWS_REGION`\n",
        "     - `AWS_BUCKET`\n",
        "   - Create environments (staging, production)\n",
        "   - Add environment-specific secrets\n",
        "\n",
        "3. **Explore the Security Workflow**\n",
        "   - Look at `.github/workflows/05-secrets-security.yml`\n",
        "   - Notice the security checks and scanning\n",
        "   - See how it handles different environments\n",
        "   - Understand the OIDC authentication with AWS\n",
        "\n",
        "4. **Run the Workflow**\n",
        "   - Go to your repository's Actions tab\n",
        "   - Find the 'Secrets and Security Example' workflow\n",
        "   - Click 'Run workflow'\n",
        "   - Select different environments\n",
        "   - Watch the security checks run\n",
        "\n",
        "5. **Security Challenges**\n",
        "   - Add a new security scanning tool\n",
        "   - Implement secret rotation for AWS credentials\n",
        "   - Add environment protection rules\n",
        "   - Create a security audit report\n",
        "\n",
        "Remember to never commit secrets to your repository and always use GitHub's secret management!"
      ]
    }
  ]
} 