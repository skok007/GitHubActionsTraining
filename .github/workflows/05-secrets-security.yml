name: Secrets and Security Example

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

# Define permissions at the workflow level
permissions:
  contents: read
  packages: write
  actions: read
  security-events: write

jobs:
  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        # Limit checkout depth for security
        fetch-depth: 1
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'GitHubActionsTraining'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --suppression suppression.xml
          --failOnCVSS 7
          --enableRetired
    
    - name: Upload OWASP Dependency Check Report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
    
    - name: Check for exposed secrets
      uses: gitleaks/gitleaks-action@v2

  secure-deploy:
    name: Secure Deployment
    needs: security-checks
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy to AWS
      run: |
        # Use AWS CLI with OIDC authentication
        aws s3 sync ./dist s3://${{ secrets.AWS_BUCKET }}/
      env:
        AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
    
    - name: Notify Success
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ Deployment successful to ${{ github.event.inputs.environment || 'staging' }} environment'
          })
    
    - name: Notify Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ Deployment failed to ${{ github.event.inputs.environment || 'staging' }} environment'
          })

  rotate-secrets:
    name: Rotate Secrets
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate new API key
      id: generate-key
      run: |
        NEW_KEY=$(openssl rand -hex 32)
        echo "new_key=$NEW_KEY" >> $GITHUB_OUTPUT
    
    - name: Update API key in AWS Secrets Manager
      run: |
        aws secretsmanager update-secret --secret-id ${{ secrets.AWS_SECRET_ID }} \
          --secret-string "{\"API_KEY\":\"${{ steps.generate-key.outputs.new_key }}\"}"
      env:
        AWS_SECRET_ID: ${{ secrets.AWS_SECRET_ID }}
    
    - name: Notify about rotation
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🔄 API key rotated successfully'
          }) 