name: Generate and Share Reports

# This workflow demonstrates the use of artifacts in GitHub Actions
# It includes three jobs: generate-reports, analyze-reports, and cleanup-reports

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  generate-reports:
    name: Generate Reports
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository
    - uses: actions/checkout@v4
    
    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    # Install project dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r exercises/04-artifacts/requirements.txt
    
    # Generate reports
    - name: Generate reports
      working-directory: exercises/04-artifacts
      run: |
        python report_generator.py
    
    # Upload reports with 5-day retention
    - name: Upload reports
      uses: actions/upload-artifact@v4
      with:
        name: generated-reports
        path: exercises/04-artifacts/reports/
        retention-days: 5
  
  analyze-reports:
    name: Analyze Reports
    needs: generate-reports
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository
    - uses: actions/checkout@v4
    
    # Download reports from previous job
    - name: Download reports
      uses: actions/download-artifact@v4
      with:
        name: generated-reports
        path: downloaded-reports
    
    # Analyze reports
    - name: Analyze reports
      run: |
        echo "Analyzing downloaded reports:"
        ls -la downloaded-reports
        echo "Report contents:"
        cat downloaded-reports/summary.txt
  
  cleanup-reports:
    name: Cleanup Old Reports
    needs: analyze-reports
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Delete old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const response = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          for (const artifact of response.data.artifacts) {
            if (artifact.name === 'generated-reports' && artifact.created_at < new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)) {
              console.log('Deleting artifact:', artifact.name, 'created at:', artifact.created_at);
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
          } 