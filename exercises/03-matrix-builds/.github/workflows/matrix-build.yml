name: Matrix Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      # Define the matrix of Python versions and operating systems
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
        os: [ubuntu-latest, windows-latest, macos-latest]
      
      # Exclude certain combinations that are known to be problematic
      exclude:
        - python-version: 3.7
          os: windows-latest  # Python 3.7 on Windows is slow and often problematic
      
      # Allow the build to fail for some combinations without failing the entire workflow
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov
        
    - name: Run tests
      run: |
        pytest tests/ -v
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}-${{ matrix.os }}
        path: |
          .pytest_cache/
          .coverage
          
  compatibility:
    name: Check Compatibility
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        
    - name: Check compatibility
      run: |
        python -c "from matrix_demo.version_check import get_compatibility_info; print(get_compatibility_info())" 